!
!         COPYRIGHT
!  
! The following is a notice of limited availability of the code, and
! disclaimer which must be included in the prologue of the code and in
! all source listings of the code.
! 
! Copyright Notice
!  + 1997/2003 NEC Corporation
!  + 1993/1997 University of Chicago
!  + 1993 Mississippi State University
! 
! The underlying software called "MPICH" was originally authored by:
! 
! Argonne National Laboratory Group
! W. Gropp:  (708) 252-4318; FAX: (708) 252-7852; e-mail: gropp@mcs.anl.gov
! E. Lusk:   (708) 252-7852; FAX: (708) 252-7852; e-mail: lusk@mcs.anl.gov
! R. Thakur: (630) 252-1682; FAX: (630) 252-5986; e-mail: thakur@mcs.anl.gov
! Mathematics and Computer Science Division
! Argonne National Laboratory, Argonne IL 60439
! 
! Mississippi State Group
! N. Doss:  (601) 325-2565; FAX: (601) 325-7692;
!           e-mail: doss@erc.msstate.edu
! A. Skjellum:(601) 325-8435; FAX: (601) 325-8997;
!           e-mail: tony@erc.msstate.edu
! Mississippi State University, Computer Science Department &
! NSF Engineering Research Center for Computational Field Simulation,
! P.O. Box 6176, Mississippi State MS 39762
! 
! This software is MPICH, with modifications by NEC Corporation's CCRLE 
! laboratory:
! CCRLE, NEC Europe Ltd., Rathausallee 10, 53757 Sankt Augustin, Germany.
! The use of the modifications included in this software is governed by
! the license agreement between the customer and NEC Corporation. In
! particular, the distribution to others or use for the preparation of
! derivative works incorporating NEC's modifications to the software
! is prohibited unless prior written approval from NEC Corporation is
! obtained.
! 
! 
!       DISCLAIMER
! 
! This computer code material was prepared, in part, as an account of work
! sponsored by an agency of the United States Government. Neither the
! United States, nor the University of Chicago, nor Mississippi State
! University, nor any of their employees, makes any warranty express or
! implied, or assumes any legal liability or responsibility for the
! accuracy, completeness, or usefulness of any information, apparatus,
! product, or process disclosed, or represents that its use would not
! infringe privately owned rights.
!      
! 
!      AVAILABILITY OF MPICH
!      
! MPICH is available from Argonne National Laboratory and Mississippi
! State under a royalty-free license to use, reproduce, prepare
! derivative works, and to redistribute to others. MPICH was prepared, in
! part, as an account of work under a U.S. Government Contract and is
! subject to the following license: the Government is granted for itself
! and others acting on its behalf a paid-up, nonexclusive, irrevocable
! worldwide license in this computer software to reproduce, prepare
! derivative works, and perform publicly and display publicly. 
!
! user include file for MPI programs, with no dependencies.
!
!     Return codes 
!
      INTEGER(kind=8) MPI_SUCCESS,MPI_ERR_BUFFER,MPI_ERR_COUNT,MPI_ERR_TYPE
      INTEGER(kind=8) MPI_ERR_TAG,MPI_ERR_COMM,MPI_ERR_RANK,MPI_ERR_ROOT
      INTEGER(kind=8) MPI_ERR_GROUP
      INTEGER(kind=8) MPI_ERR_OP,MPI_ERR_TOPOLOGY,MPI_ERR_DIMS,MPI_ERR_ARG
      INTEGER(kind=8) MPI_ERR_UNKNOWN,MPI_ERR_TRUNCATE,MPI_ERR_OTHER
      INTEGER(kind=8) MPI_ERR_INTERN,MPI_ERR_IN_STATUS,MPI_ERR_PENDING
      INTEGER(kind=8) MPI_ERR_REQUEST, MPI_ERR_LASTCODE
!
      INTEGER(kind=8) MPI_ERR_IO, MPI_ERR_ACCESS, MPI_ERR_AMODE, MPI_ERR_ASSERT
      INTEGER(kind=8) MPI_ERR_BAD_FILE, MPI_ERR_BASE, MPI_ERR_CONVERSION
      INTEGER(kind=8) MPI_ERR_DISP, MPI_ERR_DUP_DATAREP, MPI_ERR_FILE_EXISTS
      INTEGER(kind=8) MPI_ERR_FILE_IN_USE, MPI_ERR_FILE, MPI_ERR_INFO_KEY
      INTEGER(kind=8) MPI_ERR_INFO_NOKEY, MPI_ERR_INFO_VALUE, MPI_ERR_INFO
      INTEGER(kind=8) MPI_ERR_KEYVAL, MPI_ERR_LOCKTYPE, MPI_ERR_NAME
      INTEGER(kind=8) MPI_ERR_NO_MEM, MPI_ERR_NOT_SAME, MPI_ERR_NO_SPACE
      INTEGER(kind=8) MPI_ERR_NO_SUCH_FILE, MPI_ERR_PORT, MPI_ERR_QUOTA
      INTEGER(kind=8) MPI_ERR_READ_ONLY, MPI_ERR_RMA_CONFLICT, MPI_ERR_RMA_SYNC
      INTEGER(kind=8) MPI_ERR_SERVICE, MPI_ERR_SIZE, MPI_ERR_SPAWN
      INTEGER(kind=8) MPI_ERR_UNSUPPORTED_DATAREP, MPI_ERR_UNSUPPORTED_OPERATION
      INTEGER(kind=8) MPI_ERR_WIN
!
      PARAMETER (MPI_SUCCESS = 0)
      PARAMETER (MPI_ERR_BUFFER = 1)
      PARAMETER (MPI_ERR_COUNT = 2)
      PARAMETER (MPI_ERR_TYPE = 3)
      PARAMETER (MPI_ERR_TAG = 4)
      PARAMETER (MPI_ERR_COMM = 5)
      PARAMETER (MPI_ERR_RANK = 6)
      PARAMETER (MPI_ERR_ROOT = 7)
      PARAMETER (MPI_ERR_GROUP = 8)
      PARAMETER (MPI_ERR_OP = 9)
      PARAMETER (MPI_ERR_TOPOLOGY = 10)
      PARAMETER (MPI_ERR_DIMS = 11)
      PARAMETER (MPI_ERR_ARG = 12)
      PARAMETER (MPI_ERR_UNKNOWN = 13)
      PARAMETER (MPI_ERR_TRUNCATE = 14)
      PARAMETER (MPI_ERR_OTHER = 15)
      PARAMETER (MPI_ERR_INTERN = 16)
      PARAMETER (MPI_ERR_IN_STATUS = 17)
      PARAMETER (MPI_ERR_PENDING = 18)
      PARAMETER (MPI_ERR_REQUEST = 19)
!
      PARAMETER (MPI_ERR_IO = 20)
      PARAMETER (MPI_ERR_ACCESS = 21)
      PARAMETER (MPI_ERR_AMODE = 22)
      PARAMETER (MPI_ERR_ASSERT = 23)
      PARAMETER (MPI_ERR_BAD_FILE = 24)
      PARAMETER (MPI_ERR_BASE = 25)
      PARAMETER (MPI_ERR_CONVERSION = 26)
      PARAMETER (MPI_ERR_DISP = 27)
      PARAMETER (MPI_ERR_DUP_DATAREP = 28)
      PARAMETER (MPI_ERR_FILE_EXISTS = 29)
      PARAMETER (MPI_ERR_FILE_IN_USE = 30)
      PARAMETER (MPI_ERR_FILE = 31)
      PARAMETER (MPI_ERR_INFO_KEY = 32)
      PARAMETER (MPI_ERR_INFO_NOKEY = 33)
      PARAMETER (MPI_ERR_INFO_VALUE = 34)
      PARAMETER (MPI_ERR_INFO = 35)
      PARAMETER (MPI_ERR_KEYVAL = 36)
      PARAMETER (MPI_ERR_LOCKTYPE = 37)
      PARAMETER (MPI_ERR_NAME = 38)
      PARAMETER (MPI_ERR_NO_MEM = 39)
      PARAMETER (MPI_ERR_NOT_SAME = 40)
      PARAMETER (MPI_ERR_NO_SPACE = 41)
      PARAMETER (MPI_ERR_NO_SUCH_FILE = 42)
      PARAMETER (MPI_ERR_PORT = 43)
      PARAMETER (MPI_ERR_QUOTA = 44)
      PARAMETER (MPI_ERR_READ_ONLY = 45)
      PARAMETER (MPI_ERR_RMA_CONFLICT = 46)
      PARAMETER (MPI_ERR_RMA_SYNC = 47)
      PARAMETER (MPI_ERR_SERVICE = 48)
      PARAMETER (MPI_ERR_SIZE = 49)
      PARAMETER (MPI_ERR_SPAWN = 50)
      PARAMETER (MPI_ERR_UNSUPPORTED_DATAREP = 51)
      PARAMETER (MPI_ERR_UNSUPPORTED_OPERATION = 52)
      PARAMETER (MPI_ERR_WIN = 53)
!
      PARAMETER (MPI_ERR_LASTCODE = 4114)
!
      INTEGER(kind=8) MPI_ERRORS_ARE_FATAL, MPI_ERRORS_RETURN
!
      PARAMETER (MPI_ERRORS_ARE_FATAL = 119)
      PARAMETER (MPI_ERRORS_RETURN    = 120)
!
!     Parameters
!
      INTEGER(kind=8) MPI_UNDEFINED, MPI_KEYVAL_INVALID, MPI_BSEND_OVERHEAD
!
      PARAMETER (MPI_UNDEFINED      = (-32766))
      PARAMETER (MPI_KEYVAL_INVALID = 0)
      PARAMETER (MPI_BSEND_OVERHEAD = 512)
!
      INTEGER(kind=8) MPI_GRAPH, MPI_CART
      PARAMETER (MPI_GRAPH = 1)
      PARAMETER (MPI_CART  = 2)
!
      INTEGER(kind=8) MPI_SOURCE, MPI_TAG, MPI_ERROR, MPI_STATUS_SIZE
      PARAMETER (MPI_ERROR       = 1)
      PARAMETER (MPI_SOURCE      = 2)
      PARAMETER (MPI_TAG         = 3)
      PARAMETER (MPI_STATUS_SIZE = 6)
!
      INTEGER(kind=8) MPI_MAX_PROCESSOR_NAME, MPI_MAX_ERROR_STRING
      INTEGER(kind=8) MPI_MAX_NAME_STRING, MPI_MAX_INFO_KEY, MPI_MAX_INFO_VAL
      INTEGER(kind=8) MPI_MAX_DATAREP_STRING, MPI_MAX_OBJECT_NAME
      INTEGER(kind=8) MPI_MAX_PORT_NAME
!
      PARAMETER (MPI_MAX_DATAREP_STRING = 128)
      PARAMETER (MPI_MAX_ERROR_STRING   = 512)
      PARAMETER (MPI_MAX_INFO_KEY       = 255)
      PARAMETER (MPI_MAX_INFO_VAL       = 1024)
      PARAMETER (MPI_MAX_NAME_STRING    = 63)
      PARAMETER (MPI_MAX_PROCESSOR_NAME = 256)
      PARAMETER (MPI_MAX_OBJECT_NAME    = MPI_MAX_NAME_STRING)
      PARAMETER (MPI_MAX_PORT_NAME      = MPI_MAX_NAME_STRING)
!
!     Null objects
!
      INTEGER(kind=8) MPI_COMM_NULL,  MPI_DATATYPE_NULL, MPI_ERRHANDLER_NULL
      INTEGER(kind=8) MPI_GROUP_NULL, MPI_REQUEST_NULL,  MPI_PROC_NULL
      INTEGER(kind=8) MPI_OP_NULL,    MPI_INFO_NULL,     MPI_FILE_NULL
      INTEGER(kind=8) MPI_WIN_NULL
!
      PARAMETER (MPI_COMM_NULL       = 0)
      PARAMETER (MPI_DATATYPE_NULL   = 0)
      PARAMETER (MPI_ERRHANDLER_NULL = 0)
      PARAMETER (MPI_FILE_NULL       = 0)
      PARAMETER (MPI_GROUP_NULL      = 0)
      PARAMETER (MPI_INFO_NULL       = 0)
      PARAMETER (MPI_OP_NULL         = 0)
      PARAMETER (MPI_REQUEST_NULL    = 0)
      PARAMETER (MPI_WIN_NULL        = 0)
      PARAMETER (MPI_PROC_NULL       = (-1))
! 
!     Results of the compare operations
! 
      INTEGER(kind=8) MPI_IDENT, MPI_CONGRUENT, MPI_SIMILAR, MPI_UNEQUAL
      PARAMETER (MPI_IDENT     = 0)
      PARAMETER (MPI_CONGRUENT = 1)
      PARAMETER (MPI_SIMILAR   = 2)
      PARAMETER (MPI_UNEQUAL   = 3)
!
!     The types MPI_INTEGER1,2,4 and MPI_REAL4,8 are OPTIONAL.
!     Their values are zero if they are not available.  Note that
!     using these reduces the portability of code.
!
      INTEGER(kind=8) MPI_INTEGER, MPI_REAL, MPI_DOUBLE_PRECISION 
      INTEGER(kind=8) MPI_COMPLEX, MPI_DOUBLE_COMPLEX, MPI_LOGICAL
      INTEGER(kind=8) MPI_CHARACTER, MPI_BYTE, MPI_2INTEGER, MPI_2REAL
      INTEGER(kind=8) MPI_2DOUBLE_PRECISION, MPI_2COMPLEX, MPI_2DOUBLE_COMPLEX
      INTEGER(kind=8) MPI_UB, MPI_LB, MPI_PACKED
      INTEGER(kind=8) MPI_TYPECLASS_INTEGER, MPI_TYPECLASS_REAL
      INTEGER(kind=8) MPI_TYPECLASS_COMPLEX, MPI_TYPECLASS_LOGICAL
!
      PARAMETER (MPI_CHARACTER = 1)
      PARAMETER (MPI_BYTE      = 3)
      PARAMETER (MPI_PACKED    = 14)
      PARAMETER (MPI_LB        = 15)
      PARAMETER (MPI_UB        = 16)
      PARAMETER (MPI_COMPLEX   = 23)
      PARAMETER (MPI_DOUBLE_COMPLEX = 24)
      PARAMETER (MPI_LOGICAL   = 25)
      PARAMETER (MPI_REAL      = 26)
      PARAMETER (MPI_DOUBLE_PRECISION = 27)
      PARAMETER (MPI_INTEGER   = 28)
      PARAMETER (MPI_2INTEGER  = 29)
      PARAMETER (MPI_2COMPLEX  = 30)
      PARAMETER (MPI_2DOUBLE_COMPLEX = 31)
      PARAMETER (MPI_2REAL     = 32)
      PARAMETER (MPI_2DOUBLE_PRECISION = 33)
!
      PARAMETER (MPI_TYPECLASS_INTEGER = -1)
      PARAMETER (MPI_TYPECLASS_REAL    = -2)
      PARAMETER (MPI_TYPECLASS_COMPLEX = -3)
      PARAMETER (MPI_TYPECLASS_LOGICAL = -4)
!
!     FORTRAN Extensions for NEC SX
!
!  MPI_AINT   corresponds to the datatype of
!                         an INTEGER (KIND=MPI_ADDRESS_KIND) variable
!  MPI_OFFSET corresponds to the datatype of
!                         an INTEGER (KIND=MPI_OFFSET_KIND) variable
!
      INTEGER(kind=8) MPI_INTEGER1, MPI_INTEGER2, MPI_INTEGER4, MPI_INTEGER8
      INTEGER(kind=8) MPI_INTEGER16
      INTEGER(kind=8) MPI_LOGICAL1, MPI_LOGICAL4, MPI_LOGICAL8
      INTEGER(kind=8) MPI_REAL4, MPI_REAL8, MPI_REAL16
      INTEGER(kind=8) MPI_COMPLEX8, MPI_COMPLEX16, MPI_COMPLEX32
      INTEGER(kind=8) MPI_2REAL4, MPI_2REAL8, MPI_2COMPLEX8, MPI_2COMPLEX16
      INTEGER(kind=8) MPI_QUADRUPLE_PRECISION, MPI_QUADRUPLE_COMPLEX
      INTEGER(kind=8) MPI_OFFSET, MPI_AINT
!
      PARAMETER (MPI_INTEGER1 = MPI_DATATYPE_NULL)
      PARAMETER (MPI_INTEGER2 = 50)
      PARAMETER (MPI_INTEGER8 = 51)
      PARAMETER (MPI_INTEGER16 = MPI_DATATYPE_NULL)
      PARAMETER (MPI_LOGICAL1 = 52)
      PARAMETER (MPI_LOGICAL8 = 53)
      PARAMETER (MPI_QUADRUPLE_PRECISION = 54)
      PARAMETER (MPI_QUADRUPLE_COMPLEX = 55)
!
      PARAMETER (MPI_INTEGER4 = MPI_INTEGER)
      PARAMETER (MPI_LOGICAL4 = MPI_LOGICAL)
      PARAMETER (MPI_REAL4  = MPI_REAL)
      PARAMETER (MPI_REAL8  = MPI_DOUBLE_PRECISION)
      PARAMETER (MPI_REAL16 = MPI_QUADRUPLE_PRECISION)
      PARAMETER (MPI_COMPLEX8  = MPI_COMPLEX)
      PARAMETER (MPI_COMPLEX16 = MPI_DOUBLE_COMPLEX)
      PARAMETER (MPI_COMPLEX32 = MPI_QUADRUPLE_COMPLEX)
!
      PARAMETER (MPI_2REAL4 = MPI_2REAL)
      PARAMETER (MPI_2REAL8 = MPI_2DOUBLE_PRECISION)
      PARAMETER (MPI_2COMPLEX8  = MPI_2COMPLEX)
      PARAMETER (MPI_2COMPLEX16 = MPI_2DOUBLE_COMPLEX)
!
      PARAMETER (MPI_AINT    = MPI_INTEGER8)
      PARAMETER (MPI_OFFSET  = MPI_INTEGER8)
!
!     Combiner
!
      INTEGER(kind=8) MPI_COMBINER_NAMED,   MPI_COMBINER_CONTIGUOUS
      INTEGER(kind=8) MPI_COMBINER_VECTOR,  MPI_COMBINER_HVECTOR
      INTEGER(kind=8) MPI_COMBINER_INDEXED, MPI_COMBINER_HINDEXED
      INTEGER(kind=8) MPI_COMBINER_STRUCT,  MPI_COMBINER_DUP
      INTEGER(kind=8) MPI_COMBINER_INDEXED_BLOCK, MPI_COMBINER_HVECTOR_INTEGER
      INTEGER(kind=8) MPI_COMBINER_HINDEXED_INTEGER, MPI_COMBINER_STRUCT_INTEGER
      INTEGER(kind=8) MPI_COMBINER_DARRAY,  MPI_COMBINER_SUBARRAY
      INTEGER(kind=8) MPI_COMBINER_RESIZED, MPI_COMBINER_F90_REAL
      INTEGER(kind=8) MPI_COMBINER_F90_COMPLEX, MPI_COMBINER_F90_INTEGER
!
      PARAMETER (MPI_COMBINER_NAMED            = 2312)
      PARAMETER (MPI_COMBINER_CONTIGUOUS       = 2313)
      PARAMETER (MPI_COMBINER_VECTOR           = 2314)
      PARAMETER (MPI_COMBINER_HVECTOR          = 2315)
      PARAMETER (MPI_COMBINER_INDEXED          = 2316)
      PARAMETER (MPI_COMBINER_HINDEXED         = 2317)
      PARAMETER (MPI_COMBINER_STRUCT           = 2318)
      PARAMETER (MPI_COMBINER_DUP              = 2319)
      PARAMETER (MPI_COMBINER_INDEXED_BLOCK    = 2320)
      PARAMETER (MPI_COMBINER_HVECTOR_INTEGER  = 2321)
      PARAMETER (MPI_COMBINER_HINDEXED_INTEGER = 2322)
      PARAMETER (MPI_COMBINER_STRUCT_INTEGER   = 2323)
      PARAMETER (MPI_COMBINER_DARRAY           = 2324)
      PARAMETER (MPI_COMBINER_SUBARRAY         = 2325)
      PARAMETER (MPI_COMBINER_RESIZED          = 2326)
      PARAMETER (MPI_COMBINER_F90_REAL         = 2327)
      PARAMETER (MPI_COMBINER_F90_COMPLEX      = 2328)
      PARAMETER (MPI_COMBINER_F90_INTEGER      = 2329)
!
!     For subarray and darray constructors
!
      INTEGER(kind=8) MPI_ORDER_C, MPI_ORDER_FORTRAN 
      PARAMETER (MPI_ORDER_C       = 56)
      PARAMETER (MPI_ORDER_FORTRAN = 57)
!
      INTEGER(kind=8) MPI_DISTRIBUTE_BLOCK, MPI_DISTRIBUTE_CYCLIC
      INTEGER(kind=8) MPI_DISTRIBUTE_NONE, MPI_DISTRIBUTE_DFLT_DARG
      PARAMETER (MPI_DISTRIBUTE_BLOCK  = 121)
      PARAMETER (MPI_DISTRIBUTE_CYCLIC = 122)
      PARAMETER (MPI_DISTRIBUTE_NONE   = 123)
      PARAMETER (MPI_DISTRIBUTE_DFLT_DARG = -49767)
!
!     Collective operations
!
      INTEGER(kind=8) MPI_SUM, MPI_MAX, MPI_MIN,  MPI_PROD, MPI_LAND, MPI_BAND
      INTEGER(kind=8) MPI_LOR, MPI_BOR, MPI_LXOR, MPI_BXOR, MPI_MINLOC
      INTEGER(kind=8) MPI_MAXLOC, MPI_REPLACE
!
      PARAMETER (MPI_MAX    = 100)
      PARAMETER (MPI_MIN    = 101)
      PARAMETER (MPI_SUM    = 102)
      PARAMETER (MPI_PROD   = 103)
      PARAMETER (MPI_LAND   = 104)
      PARAMETER (MPI_BAND   = 105)
      PARAMETER (MPI_LOR    = 106)
      PARAMETER (MPI_BOR    = 107)
      PARAMETER (MPI_LXOR   = 108)
      PARAMETER (MPI_BXOR   = 109)
      PARAMETER (MPI_MINLOC = 110)
      PARAMETER (MPI_MAXLOC = 111)
      PARAMETER (MPI_REPLACE= 112)
!
!     Communicator
!
      INTEGER(kind=8) MPI_COMM_WORLD, MPI_COMM_SELF, MPI_GROUP_EMPTY
      INTEGER(kind=8) MPI_TAG_UB, MPI_HOST, MPI_IO, MPI_WTIME_IS_GLOBAL
      INTEGER(kind=8) MPI_UNIVERSE_SIZE, MPI_APPNUM
      INTEGER(kind=8) MPI_LASTUSEDCODE
      INTEGER(kind=8) MPI_APPL_GROUP, MPI_MAX_APPL_GROUP
      INTEGER(kind=8) MPI_COMM_SPECIAL_BARRIER, MPI_WIN_SPECIAL_BARRIER
!
      PARAMETER (MPI_GROUP_EMPTY = 90)
      PARAMETER (MPI_COMM_WORLD  = 91)
      PARAMETER (MPI_COMM_SELF   = 92)
!
!     Attributes
!
      PARAMETER (MPI_TAG_UB = 80)
      PARAMETER (MPI_HOST   = 82)
      PARAMETER (MPI_IO     = 84)
      PARAMETER (MPI_WTIME_IS_GLOBAL = 86)
      PARAMETER (MPI_UNIVERSE_SIZE   = 88)
      PARAMETER (MPI_APPNUM          = 78)
      PARAMETER (MPI_LASTUSEDCODE = 150)
!
      PARAMETER (MPI_APPL_GROUP     = 146)
      PARAMETER (MPI_MAX_APPL_GROUP = 148)
!
      PARAMETER (MPI_COMM_SPECIAL_BARRIER = 142)
      PARAMETER (MPI_WIN_SPECIAL_BARRIER  = 144)
!
      INTEGER(kind=8) MPI_ANY_TAG, MPI_ANY_SOURCE, MPI_ROOT
      PARAMETER (MPI_ANY_TAG    = (-1))
      PARAMETER (MPI_ANY_SOURCE = (-2))
      PARAMETER (MPI_ROOT       = (-3))
!
      INTEGER(kind=8) MPI_VERSION, MPI_SUBVERSION
      PARAMETER (MPI_VERSION    = 2)
      PARAMETER (MPI_SUBVERSION = 0)
!
!     Fortran MPI-IO
!
      INTEGER(kind=8) MPI_MODE_RDONLY, MPI_MODE_RDWR, MPI_MODE_WRONLY
      INTEGER(kind=8) MPI_MODE_DELETE_ON_CLOSE, MPI_MODE_UNIQUE_OPEN
      INTEGER(kind=8) MPI_MODE_CREATE, MPI_MODE_EXCL
      INTEGER(kind=8) MPI_MODE_APPEND, MPI_MODE_SEQUENTIAL
      PARAMETER (MPI_MODE_RDONLY = 2)
      PARAMETER (MPI_MODE_RDWR   = 8)
      PARAMETER (MPI_MODE_WRONLY = 4)
      PARAMETER (MPI_MODE_CREATE = 1)
      PARAMETER (MPI_MODE_DELETE_ON_CLOSE = 16)
      PARAMETER (MPI_MODE_UNIQUE_OPEN = 32)
      PARAMETER (MPI_MODE_EXCL = 64)
      PARAMETER (MPI_MODE_APPEND = 128)
      PARAMETER (MPI_MODE_SEQUENTIAL = 256)
!
      INTEGER(kind=8) MPI_SEEK_SET, MPI_SEEK_CUR, MPI_SEEK_END
      PARAMETER (MPI_SEEK_SET = 600)
      PARAMETER (MPI_SEEK_CUR = 602)
      PARAMETER (MPI_SEEK_END = 604)
!
      INTEGER(kind=8) MPI_DISPLACEMENT_CURRENT
      PARAMETER (MPI_DISPLACEMENT_CURRENT = -1)
!
!     Offset kind and address kind
!
      INTEGER(kind=8) MPI_INTEGER_KIND, MPI_OFFSET_KIND, MPI_ADDRESS_KIND
!
      PARAMETER (MPI_INTEGER_KIND = 4)
      PARAMETER (MPI_OFFSET_KIND  = 8)
      PARAMETER (MPI_ADDRESS_KIND = 8)
!
!     Thread support
!
      INTEGER(kind=8) MPI_THREAD_SINGLE,     MPI_THREAD_FUNNELED
      INTEGER(kind=8) MPI_THREAD_SERIALIZED, MPI_THREAD_MULTIPLE
!
      PARAMETER (MPI_THREAD_SINGLE     = 1)
      PARAMETER (MPI_THREAD_FUNNELED   = 2)
      PARAMETER (MPI_THREAD_SERIALIZED = 3)
      PARAMETER (MPI_THREAD_MULTIPLE   = 4)
!
!     Windows
!
      INTEGER(kind=8) MPI_LOCK_EXCLUSIVE, MPI_LOCK_SHARED
      INTEGER(kind=8) MPI_MODE_NOCHECK,   MPI_MODE_NOSTORE
      INTEGER(kind=8) MPI_MODE_NOPUT,     MPI_MODE_NOPRECEDE
      INTEGER(kind=8) MPI_MODE_NOSUCCEED
!
      PARAMETER (MPI_LOCK_EXCLUSIVE    = 0)
      PARAMETER (MPI_LOCK_SHARED       = 1)
!
      PARAMETER (MPI_MODE_NOCHECK      = 256)
      PARAMETER (MPI_MODE_NOSTORE      = 512)
      PARAMETER (MPI_MODE_NOPUT        = 1024)
      PARAMETER (MPI_MODE_NOPRECEDE    = 2048)
      PARAMETER (MPI_MODE_NOSUCCEED    = 4096)
!
!  NEC extension
!
      INTEGER(kind=8) MPI_NEC_MODE_GETPUTALIGNED
      PARAMETER (MPI_NEC_MODE_GETPUTALIGNED = 16384)
!
      INTEGER(kind=8) MPI_WIN_BASE, MPI_WIN_SIZE, MPI_WIN_DISP_UNIT
!
      PARAMETER (MPI_WIN_BASE          = 94)
      PARAMETER (MPI_WIN_SIZE          = 96)
      PARAMETER (MPI_WIN_DISP_UNIT     = 98)
!
!     Common blocks :
!
!     Dummy variables in order to guarantuee compatibility
!     to previous versions of MPI/SX
!
      INTEGER(kind=8) MPIR_ARGV_NULL_I,     MPIR_ARGVS_NULL_I
      INTEGER(kind=8) MPIR_STATUS_IGNORE_I, MPIR_STATUSES_IGNORE_I
      INTEGER(kind=8) MPIR_DUMMY (4)
!
!     MPI_BOTTOM needs to be a known address; here we put it at the
!     beginning of the common block.
!     MPI_STATUS_IGNORE, MPI_STATUSES_IGNORE, MPI_ERRCODES_IGNORE, ...
!     are similar objects
!
      INTEGER(kind=8) MPI_BOTTOM, MPI_IN_PLACE
      INTEGER(kind=8) MPI_STATUS_IGNORE   (MPI_STATUS_SIZE)
      INTEGER(kind=8) MPI_STATUSES_IGNORE (MPI_STATUS_SIZE, 1)
      INTEGER(kind=8) MPI_ERRCODES_IGNORE(1)
      CHARACTER (LEN=8) MPI_ARGV_NULL(1), MPI_ARGVS_NULL(1,1)
!
      GLOBAL COMMON /MPIPRIV/  MPI_BOTTOM, MPIR_DUMMY
      GLOBAL COMMON /MPIPRIV2/ MPIR_STATUS_IGNORE_I
      GLOBAL COMMON /MPIPRIV2/ MPIR_STATUSES_IGNORE_I
      GLOBAL COMMON /MPIPRIV2/ MPI_ERRCODES_IGNORE, MPI_IN_PLACE
      GLOBAL COMMON /MPIPRIV2/ MPIR_ARGV_NULL_I,  MPIR_ARGVS_NULL_I
      GLOBAL COMMON /MPIPRIV3/ MPI_STATUS_IGNORE, MPI_STATUSES_IGNORE
      GLOBAL COMMON /MPIPRIV4/ MPI_ARGV_NULL,     MPI_ARGVS_NULL
!
      SAVE /MPIPRIV/, /MPIPRIV2/, /MPIPRIV3/, /MPIPRIV4/
!
!     All other MPI routines are subroutines
!
      DOUBLE PRECISION MPI_WTIME, MPI_WTICK
      EXTERNAL         MPI_WTIME, MPI_WTICK
!
      DOUBLE PRECISION MPI_NEC_BLOCK_TIME
      EXTERNAL         MPI_NEC_BLOCK_TIME
!
!     DOUBLE PRECISION PMPI_WTIME, PMPI_WTICK
!     EXTERNAL         PMPI_WTIME, PMPI_WTICK
!
!     The attribute copy/delete subroutines are symbols that can be passed
!     to MPI routines
!
      EXTERNAL MPI_NULL_COPY_FN, MPI_NULL_DELETE_FN, MPI_DUP_FN
!
      EXTERNAL MPI_COMM_NULL_COPY_FN, MPI_COMM_NULL_DELETE_FN
      EXTERNAL MPI_COMM_DUP_FN
!
      EXTERNAL MPI_TYPE_NULL_COPY_FN, MPI_TYPE_NULL_DELETE_FN
      EXTERNAL MPI_TYPE_DUP_FN
!
      EXTERNAL MPI_WIN_NULL_COPY_FN, MPI_WIN_NULL_DELETE_FN
      EXTERNAL MPI_WIN_DUP_FN
